{
  "_args": [
    [
      {
        "raw": "eslint-plugin-chai-friendly@^0.4.1",
        "scope": null,
        "escapedName": "eslint-plugin-chai-friendly",
        "name": "eslint-plugin-chai-friendly",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "/Users/Manu/KIT/MicrosoftInnovationHack2018"
    ]
  ],
  "_from": "eslint-plugin-chai-friendly@>=0.4.1 <0.5.0",
  "_id": "eslint-plugin-chai-friendly@0.4.1",
  "_inCache": true,
  "_location": "/eslint-plugin-chai-friendly",
  "_nodeVersion": "8.1.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eslint-plugin-chai-friendly-0.4.1.tgz_1512516827915_0.5121628381311893"
  },
  "_npmUser": {
    "name": "ihor.diachenko",
    "email": "ih.diachenko@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-chai-friendly@^0.4.1",
    "scope": null,
    "escapedName": "eslint-plugin-chai-friendly",
    "name": "eslint-plugin-chai-friendly",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-chai-friendly/-/eslint-plugin-chai-friendly-0.4.1.tgz",
  "_shasum": "9eeb17f92277ba80bb64f0e946c6936a3ae707b4",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-chai-friendly@^0.4.1",
  "_where": "/Users/Manu/KIT/MicrosoftInnovationHack2018",
  "author": {
    "name": "Ihor Diachenko"
  },
  "bugs": {
    "url": "https://github.com/ihordiachenko/eslint-plugin-chai-friendly/issues"
  },
  "dependencies": {},
  "description": "This plugin makes 'no-unused-expressions' rule friendly towards chai expect statements.",
  "devDependencies": {
    "eslint": "~3.11.0",
    "mocha": "^3.0.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-hkpLN7VVoGGsofZjUhcQ+sufC3FgqMJwD0DvAcRfxY1tVRyQyVsqpaKnToPHJQOrRo0FQ0fSEDwW2gr4rsNdGA==",
    "shasum": "9eeb17f92277ba80bb64f0e946c6936a3ae707b4",
    "tarball": "https://registry.npmjs.org/eslint-plugin-chai-friendly/-/eslint-plugin-chai-friendly-0.4.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "5cefb47adc0848cc50503d357b2226c6956e8b69",
  "homepage": "https://github.com/ihordiachenko/eslint-plugin-chai-friendly#readme",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "chai",
    "lint"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ihor.diachenko",
      "email": "ih.diachenko@gmail.com"
    }
  ],
  "name": "eslint-plugin-chai-friendly",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": ">=3.0.0"
  },
  "readme": "# eslint-plugin-chai-friendly\n\n[![npm](https://img.shields.io/npm/v/eslint-plugin-chai-friendly.svg)](https://www.npmjs.com/package/eslint-plugin-chai-friendly) [![npm](https://img.shields.io/npm/dm/eslint-plugin-chai-friendly.svg)](https://www.npmjs.com/package/eslint-plugin-chai-friendly)\n\nThis plugin overrides `no-unused-expressions` to make it friendly towards chai `expect` and `should` statements.\n\n```javascript\n// this\nexpect(foo).to.be.true;\nfoo.should.be.true;\n\n// instead of this\nexpect(foo).to.be.true; // eslint-disable-line no-unused-expressions\nfoo.should.be.true; // eslint-disable-line no-unused-expressions\n```\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```bash\nnpm i eslint --save-dev\n```\n\nNext, install `eslint-plugin-chai-friendly`:\n\n```bash\nnpm install eslint-plugin-chai-friendly --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-chai-friendly` globally.\n\n## Usage\n\nAdd `chai-friendly` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n    \"plugins\": [\n        \"chai-friendly\"\n    ]\n}\n```\n\n\nThen disable original `no-unused-expressions` rule and configure chai-friendly replacement under the rules section.\n\n```json\n{\n    \"rules\": {\n        \"no-unused-expressions\": 0,\n        \"chai-friendly/no-unused-expressions\": 2\n    }\n}\n```\n\n## Options\n\nThis rule, in its default state, does not require any arguments. If you would like to enable one or more of the following you may pass an object with the options set as follows:\n\n- `allowShortCircuit` set to `true` will allow you to use short circuit evaluations in your expressions (Default: `false`).\n- `allowTernary` set to `true` will enable you to use ternary operators in your expressions similarly to short circuit evaluations (Default: `false`).\n- `allowTaggedTemplates` set to `true` will enable you to use tagged template literals in your expressions (Default: `false`).\n\nThese options allow unused expressions only if all of the code paths either directly change the state (for example, assignment statement) or could have side effects (for example, function call).\n\nMore info in the original rule's [docs](http://eslint.org/docs/rules/no-unused-expressions#options).\n\n## Supported Rules\n\n- chai-friendly/no-unused-expressions\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ihordiachenko/eslint-plugin-chai-friendly.git"
  },
  "scripts": {
    "test": "mocha tests --recursive"
  },
  "version": "0.4.1"
}
